from typing import Any, Optional

class HTMXMiddleware:
    def __init__(self, get_response: Any) -> None: ...
    def __call__(self, request: Any) -> Any: ...

# HTMX details class for request.htmx
class HTMXDetails:
    def __init__(self, request: Any) -> None: ...
    @property
    def boosted(self) -> bool: ...
    @property
    def current_url(self) -> Optional[str]: ...
    @property
    def history_restore_request(self) -> bool: ...
    @property
    def prompt(self) -> Optional[str]: ...
    @property
    def request(self) -> Optional[str]: ...
    @property
    def target(self) -> Optional[str]: ...
    @property
    def trigger(self) -> Optional[str]: ...
    @property
    def trigger_name(self) -> Optional[str]: ...

# Add HtmxHttpRequest for type checking
class HtmxHttpRequest:
    htmx: HTMXDetails
